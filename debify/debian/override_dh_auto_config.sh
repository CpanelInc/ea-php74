#!/bin/bash

source debian/vars.sh

set -x 

# _httpd_mmn and mysql_sock are generated by scripts, so we have to modify it here

export _httpd_mmn=$(cat /usr/include/apache2/.mmn 2>/dev/null || echo missing-ea-apache24-devel)
export mysql_sock=$(mysql_config --socket  2>/dev/null || echo /var/lib/mysql/mysql.sock) 

echo "SCRIPTS"
echo "_httpd_mmn :$_httpd_mmn:"
echo "mysql_sock :$mysql_sock:"

: Building $name-$version-$release with systemd=$with_systemd interbase=$with_interbase sqlite3=$with_sqlite3 tidy=$with_tidy zip=$with_zip
# Prevent %%doc confusion over LICENSE files
cp Zend/LICENSE Zend/ZEND_LICENSE
cp TSRM/LICENSE TSRM_LICENSE
cp sapi/fpm/LICENSE fpm_LICENSE
cp ext/mbstring/libmbfl/LICENSE libmbfl_LICENSE
cp ext/fileinfo/libmagic/LICENSE libmagic_LICENSE
cp ext/bcmath/libbcmath/LICENSE libbcmath_LICENSE
# Remove the bundled version of litespeed
# and replace it with the latest version
cd sapi
tar -xvf $SOURCE1 --exclude=Makefile.frag --exclude=config.m4
cd ..
# Multiple builds for multiple SAPIs
mkdir \
    build-embedded \
    build-fpm \
    build-apache \
    build-cgi
# ----- Manage known as failed test -------
# affected by systzdata patch
rm -f ext/date/tests/timezone_location_get.phpt
rm -f ext/date/tests/timezone_version_get.phpt
rm -f ext/date/tests/timezone_version_get_basic1.phpt
# fails sometime
rm -f ext/sockets/tests/mcast_ipv?_recv.phpt
# Should be skipped but fails sometime
rm ext/standard/tests/file/file_get_contents_error001.phpt
# cause stack exhausion
rm Zend/tests/bug54268.phpt
rm Zend/tests/bug68412.phpt
# Safety check for API version change.
pver=$(sed -n '/#define PHP_VERSION /{s/.* "//;s/".*$//;p}' main/php_version.h)
if test "x${pver}" != "x$version"; then
   : Error: Upstream PHP version is now ${pver}, expecting $version.
   : Update the version macros and rebuild.
   exit 1
fi
vapi=`sed -n '/#define PHP_API_VERSION/{s/.* //;p}' main/php.h`
if test "x${vapi}" != "x$apiver"; then
   : Error: Upstream API version is now ${vapi}, expecting $apiver.
   : Update the apiver macro and rebuild.
   exit 1
fi
vzend=`sed -n '/#define ZEND_MODULE_API_NO/{s/^[^0-9]*//;p;}' Zend/zend_modules.h`
if test "x${vzend}" != "x$zendver"; then
   : Error: Upstream Zend ABI version is now ${vzend}, expecting $zendver.
   : Update the zendver macro and rebuild.
   exit 1
fi
# Safety check for PDO ABI version change
vpdo=`awk '/^#define PDO_DRIVER_API/ { print $3 } ' ext/pdo/php_pdo_driver.h`
if test "x${vpdo}" != "x$pdover"; then
   : Error: Upstream PDO ABI version is now ${vpdo}, expecting $pdover.
   : Update the pdover macro and rebuild.
   exit 1
fi
# https://bugs.php.net/63362 - Not needed but installed headers.
# Drop some Windows specific headers to avoid installation,
# before build to ensure they are really not needed.
rm -f TSRM/tsrm_win32.h \
      TSRM/tsrm_config.w32.h \
      Zend/zend_config.w32.h \
      ext/mysqlnd/config-win.h \
      ext/standard/winver.h \
      main/win32_internal_function_disabled.h \
      main/win95nt.h
# Fix some bogus permissions
find . -name \*.[ch] -exec chmod 644 {} \;
chmod 644 README.*
# Create the macros.php files
sed -e "s/@PHP_APIVER@/$apiver$isasuffix/" \
    -e "s/@PHP_ZENDVER@/$zendver$isasuffix/" \
    -e "s/@PHP_PDOVER@/$pdover$isasuffix/" \
    -e "s/@PHP_VERSION@/$version/" \
    -e "s:@LIBDIR@:$_libdir:" \
    -e "s:@ETCDIR@:$_sysconfdir:" \
    -e "s:@INCDIR@:$_includedir:" \
    -e "s:@BINDIR@:$_bindir:" \
    -e 's/@SCL@/$ns_name_$pkg_/' \
    $SOURCE3 | tee macros.php
# php-fpm configuration files for tmpfiles.d
# TODO echo "d /run/php-fpm 755 root root" >php-fpm.tmpfiles
# Some extensions have their own configuration file
cp $SOURCE50 10-opcache.ini
sed -e '/opcache.huge_code_pages/s/0/1/' -i 10-opcache.ini
cp $SOURCE51 .
sed -e 's:$_root_sysconfdir:$_sysconfdir:' \
    -i 10-opcache.ini
# aclocal workaround - to be improved
cat `aclocal --print-ac-dir`/{libtool,ltoptions,ltsugar,ltversion,lt~obsolete}.m4 >>aclocal.m4
# Force use of system libtool:
libtoolize --force --copy
cat `aclocal --print-ac-dir`/{libtool,ltoptions,ltsugar,ltversion,lt~obsolete}.m4 >build/libtool.m4
# Regenerate configure scripts (patches change config.m4's)
touch configure.in
./buildconf --force
CFLAGS="$RPM_OPT_FLAGS -fno-strict-aliasing -Wno-pointer-sign -mshstk"
export CFLAGS
export CURL_SHARED_LIBADD="-Wl,-rpath=/opt/cpanel/ea-brotli/$_lib"
# Install extension modules in $_libdir/php/modules.
EXTENSION_DIR=$_libdir/php/modules; export EXTENSION_DIR
# Set PEAR_INSTALLDIR to ensure that the hard-coded include_path
# includes the PEAR directory even though pear is packaged
# separately.
PEAR_INSTALLDIR=$_datadir/pear; export PEAR_INSTALLDIR
export XLDFLAGS=$LDFLAGS
# Shell function to configure and build a PHP tree.
build() {
# Old/recent bison version seems to produce a broken parser;
# upstream uses GNU Bison 2.3. Workaround:
mkdir Zend && cp ../Zend/zend_{language,ini}_{parser,scanner}.[ch] Zend
# Always static:
# date, filter, libxml, reflection, spl: not supported
# hash: for PHAR_SIG_SHA256 and PHAR_SIG_SHA512
# session: dep on hash, used by soap
# pcre: used by filter, zip
# pcntl, readline: only used by CLI sapi
# openssl: for PHAR_SIG_OPENSSL
# zlib: used by image
export PKG_CONFIG_PATH=/opt/cpanel/ea-php74/root/usr/lib64/pkgconfig:/opt/cpanel/ea-php74/root/usr/share/pkgconfig:/usr/lib/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig
export JPEG_CFLAGS=-I/usr/include
export JPEG_LIBS="-L/usr/$_lib -ljpeg"
export KERBEROS_CFLAGS=-I/usr/include
export KERBEROS_LIBS=-L/usr/$_lib
export SASL_CFLAGS=-I/usr/include
export SASL_LIBS=-L/usr/$_lib
export SYSTEMD_LIBS=-lsystemd

# libc-client stuff
export IMAP_LIB=c-client
export IMAP_LIBDIR=/opt/cpanel/ea-php74/root/usr/lib64
export IMAP_INC_DIR=/opt/cpanel/ea-php74/root/usr/include/c-client
export PHP_IMAP_SHARED=no
export IMAP_DIR=/opt/cpanel/ea-php74/root/usr
export PHP_IMAP=/opt/cpanel/ea-php74/root/usr



#sed -i '2iset -x\n' ../configure
#sed -i '2336iecho "FLAGS :$CFLAGS: :$LIBS: :$ac_status:"\nls -ld /proc/self/fd/5 && /bin/true\ncat -n config.log' ../configure
#sed -i '2349iecho "FLAGS :$CFLAGS: :$LIBS: :$ac_status:"\nls -ld /proc/self/fd/5 && /bin/true\ncat -n config.log' ../configure
#sed -i '2336iecho "FLAGS :$CFLAGS: :$LIBS: :$ac_status:"\n' ../configure
#sed -i '2349iecho "FLAGS :$CFLAGS: :$LIBS: :$ac_status:"\n' ../configure
#sed -i '2173icat -n conftest.err\n' ../configure
#sed -i '427iecho "BEGIN: conftest.c"\nls -ld c*\necho "END: conftest.c"' ../configure

#sed -i '2326iCFLAGS="$IMAP_INC_DIR $CFLAGS"\nLIBS="-L$IMAP_LIBDIR -lc-client $LIBS"\nLIBS=`echo $LIBS | sed -- "s/-limap//g"`' ../configure

/usr/bin/perl $SOURCE8001 ../configure $SOURCE8002 2319
sed -i '2342ipre_imap\n' ../configure
sed -i '2378ipost_imap\n' ../configure
sed -i '38557iIN_IMAP="1"\n' ../configure
sed -i '40077iIN_IMAP=""\n' ../configure

echo "CONFIGURE"
cat -n ../configure
echo "CONFIGURE END"

echo "PWD" `pwd` $_prefix

ln -sf ../configure
./configure \
    --cache-file=../config.cache \
    --with-db4=/usr \
    --with-libdir=lib/x86_64-linux-gnu \
    --with-config-file-path=$_sysconfdir \
    --with-config-file-scan-dir=$_sysconfdir/php.d \
    --disable-debug \
    --with-password-argon2 \
    --with-pic \
    --without-pear \
    --with-bz2 \
    --with-freetype \
    --with-xpm \
    --without-gdbm \
    --with-gettext \
    --with-iconv \
    --with-jpeg \
    --with-openssl \
    --with-zlib \
    --with-layout=GNU \
    --enable-exif \
    --enable-ftp \
    --enable-sockets \
    --with-kerberos \
    --enable-shmop \
    --with-libxml \
    --with-tidy=/usr \
    --with-system-tzdata \
    --with-mhash \
    $*
if test $? != 0; then
  tail -500 config.log
  : configure failed
  exit 1
fi
make 
}
# Build /usr/bin/php-cgi with the CGI SAPI, and most the shared extensions
pushd build-cgi
build --libdir=$_libdir/php \
      --enable-pcntl \
      --enable-opcache \
      --enable-phpdbg \
      --with-imap=shared,$_prefix \
      --with-imap-ssl \
      --enable-mbstring=shared \
      --enable-gd=shared \
      --with-gmp=shared \
      --enable-calendar=shared \
      --enable-bcmath=shared \
      --with-bz2=shared \
      --enable-ctype=shared \
      --enable-dba=shared --with-db4=$_root_prefix \
                          --with-tcadb=$_root_prefix \
      --enable-exif=shared \
      --enable-ftp=shared \
      --with-gettext=shared \
      --with-iconv=shared \
      --enable-sockets=shared \
      --enable-tokenizer=shared \
      --with-xmlrpc=shared \
      --with-ldap=shared --with-ldap-sasl \
      --enable-mysqlnd=shared \
      --with-mysqli=shared,mysqlnd \
      --with-mysql-sock=$mysql_sock \
      --enable-dom=shared \
      --with-pgsql=shared \
      --enable-simplexml=shared \
      --enable-xml=shared \
      --with-snmp=shared,$_root_prefix \
      --enable-soap=shared \
      --with-xsl=shared,$_root_prefix \
      --enable-xmlreader=shared --enable-xmlwriter=shared \
      --with-curl=shared \
      --enable-pdo=shared \
      --with-pdo-odbc=shared,unixODBC,$_root_prefix \
      --with-pdo-mysql=shared,mysqlnd \
      --with-pdo-pgsql=shared,$_root_prefix \
      --with-pdo-sqlite=shared,$_root_prefix \
      --with-sqlite3=shared,$_root_prefix \
      --enable-json=shared \
      --with-zip=shared \
      --without-readline \
      --with-readline \
      --with-pspell=shared \
      --enable-phar=shared \
      --enable-sysvmsg=shared --enable-sysvshm=shared --enable-sysvsem=shared \
      --enable-shmop=shared \
      --enable-posix=shared \
      --with-unixODBC=shared,$_root_prefix \
      --enable-intl=shared \
      --with-enchant=shared \
      --enable-fileinfo=shared
popd
without_shared="--disable-gd \
      --disable-dom --disable-dba --without-unixODBC \
      --disable-opcache \
      --disable-xmlreader --disable-xmlwriter \
      --without-sqlite3 --disable-phar --disable-fileinfo \
      --disable-json --without-pspell \
      --without-curl --disable-posix --disable-xml \
      --disable-simplexml --disable-exif --without-gettext \
      --without-iconv --disable-ftp --without-bz2 --disable-ctype \
      --disable-shmop --disable-sockets --disable-tokenizer \
      --disable-sysvmsg --disable-sysvshm --disable-sysvsem \
      --without-gmp --disable-calendar"
# Build Apache module, and the CLI SAPI, /usr/bin/php
pushd build-apache
build --with-apxs2=/usr/bin/apxs \
      --libdir=$_libdir/php \
      --enable-litespeed \
      --without-mysqli \
      --disable-pdo \
      ${without_shared}
popd
# Build php-fpm
pushd build-fpm
build --enable-fpm \
      --with-fpm-systemd \
      --libdir=$_libdir/php \
      --without-mysqli \
      --disable-pdo \
      --enable-pcntl \
      ${without_shared}
popd
# Build for inclusion as embedded script language into applications,
# /usr/lib[64]/libphp7.so
pushd build-embedded
build --enable-embed \
      --without-mysqli --disable-pdo \
      ${without_shared}
popd
